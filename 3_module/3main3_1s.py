#3main3_1s.py
#Создание таблиц в БД(SQL-команды)
import mysql.connector

db = mysql.connector.connect(
    host="localhost",
    user="root",
    password="",
    database="python-example"
    #port = "8889" - для MAMP
)
# print(db)

#теперь создаем курсор-можно будет выполнять какие-либо дейсвия
cur = db.cursor() #обратились к ф-ии cursor()

#создадим строку,чтобы создать SQL-команду
#sql="CREATE DATABASE `python-example`" #создать БД с названием python-example(будет выдаваться ошибка
# в SQL синтаксисе - python-example - 2 слова,поэтому надо прописывать их в обратные кавычки ``.
#если 1 слово,можно не прописывать кавычки

#sql="DROP DATABASE `python`" #удалить БД

#название всех баз данных
#sql = "SHOW DATABASES" #показать БД>

#создаем таблицу.Можно указать в sql,но лучше прописать в
# db = mysql. подключение к нашей БД(database="python-example"
#sql = "CREATE TABLE users(name VARCHAR(50),age INT(3))" #СОЗДАТЬ ТАБЛИЦУ назв. users(с полями имя
#типом данных VARCHAR(макс-50 символов)и age)

#команда для получения названия всех таблиц
sql = "SHOW TABLES" #ПОКАЗАТЬ ТАБЛИЦЫ>также через цикл

#выполнить SQL-команду
cur.execute(sql) #в ф-ю execute подставляем sql-команду

#>теперь нужно перебрать получ. значения и вывести в терминал
for el in cur:
    print(el)


#открыли соединение открыли курсор,теперь это все надо закрыть
cur.close()
db.close()

#создание таблиц:Сравнение---кодировка(utf8-general-ci)
#Атрибуты -- UNSIGNED(нельзя добавить отрицательные числа)
#Null -- если хотим чтобы поле принимало значение пустоты
#Индекс -- PRIMARY(первичный ключ по которому можно будет искать все записи)
#A.I -- авто инкремент(автоматически подтавляет числа при создании поля и увел. на 1)
#Надо еще добавить Сравнение(кодировку) на всю табл.И тип таблицы либо
#InnoDB(нужен для связей с таблицами) либо MyISAM.
